<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- This section type declaration is needed unless you want to set things up entirely in code -->
    <section name="Exceptional" type="StackExchange.Exceptional.Settings, StackExchange.Exceptional" />
  </configSections>
  <!-- Example minimal setup section that uses an in-memory error store: -->
  <!--<Exceptional applicationName ="Samples.MVC4" />-->

  <!-- Complete Exceptional Settings: only applicationName is required here, if given no store we'll default to memory. -->
  <Exceptional applicationName="Samples.MVC4">
    <!-- This entire section is optional, if you want to log all exceptions you can leave off <IgnoreErrors> -->
    <IgnoreErrors>
      <!-- Optional: Error messages to ignore -->
      <Regexes>
        <!-- Exceptions with messages matching a regex here will not be logged -->
        <!--<add name="connection suuuuuuuucks" pattern="Request timed out\.$"/>-->
      </Regexes>
      <!-- Optional: Error types to ignore, e.g. <add type="System.Exception" /> or <add type="MyNameSpace.MyException" />-->
      <Types>
        <!-- Exceptions of the type here will not be logged, if you want to ignore an entire class of exception-->
        <!--<add type="System.Exception" />-->
      </Types>
    </IgnoreErrors>
    <LogFilters>
      <Form>
        <add name="password" replaceWith="********" />
      </Form>
    </LogFilters>
    <!-- Email settings to send to, if an email per exception is desired, only toAddress is required, other defaults are pulled from the <system.net> section -->
    <!--<Email fromAddress="exceptions@site.com" fromDisplayName="Bob the Builder" toAddress="nrcraver@gmail.com" />-->
    <!-- Which ErrorStore to use, if no element is declared here a Memory store with defaults will be used -->
    <ErrorStore type="Memory" />
    <!-- Other store types, common attributes:
         - rollupSeconds: optional (default 600 seconds), determines how long the window is to roll up exceptions with the same stack trace - 0 to not roll up
         - backupQueueSize: optional (default 1000), determines how many errors to cache (excluding rollups) in memory when logging fails...every 2 seconds we'll retry logging and flush these out to the final store -->
    <!-- JSON: size defaults to 200, this is how many files are kept before the oldest error is removed -->
    <!--<ErrorStore type="JSON" path="~/Errors" size="200" />-->
    <!-- SQL: only a connection string or connection string name is needed, many applications can log to the same place as long as they have unique names (otherwise we can't tell them apart). -->
    <!--<ErrorStore type="SQL" connectionString="Server=.;Database=Exceptions;Uid=Exceptions;Pwd=myPassword!" />-->
    <!--<ErrorStore type="SQL" connectionStringName="MyConnectionString" />-->
  </Exceptional>
  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-Samples.MVC4-20120901082117;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-Samples.MVC4-20120901082117.mdf" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <!-- OPTIONAL: if not using a router, or you don't want to access the errors directly via this application,
           this is not necessary.  A common scneario for this is logging all errors to a common SQL store and viewing
           them through another application or a dashboard elsewhere.  
           Note: If the error list isn't exposed in the application, any errors in logging exceptions will be queued up, 
           but not visible (since that's exposed on the error list view).
      -->
      <add name="Exceptional" path="exceptions.axd" verb="POST,GET,HEAD" type="StackExchange.Exceptional.ExceptionalModule, StackExchange.Exceptional" preCondition="integratedMode" />
    </handlers>
    <!-- Here the error log needs to be registered to catch all unhandled exceptions, 
         these are exceptions that make it all the way to being a 500 page the user sees. -->
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="StackExchange.Exceptional.ExceptionalModule, StackExchange.Exceptional" />
    </modules>
  </system.webServer>
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network" from="exceptions@domain.com">
         <network host="localhost" port="25"/>
      </smtp>
    </mailSettings>
  </system.net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>